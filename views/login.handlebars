<h1>Skate Park</h1>

<div class="py-5">
    
    {{!-- si desde la ruta POST de /login se logra rescatar el email del usuario luego de iniciar sesion, lo mostrare aqui. --}}
    {{!-- si la sesion existe, ocultare el formulario para iniciar sesion, en caso contrario, estara disponible --}}
    {{!-- {{#if session.email}}
        <h3>Bienvenido {{session.email}}</h3>
        <h4 class="mt-3">Usted ya inicio sesión.</h4>
        <a href="/"><button type="button" class="btn btn-primary mt-5">Volver a Inicio</button></a>

    {{else}} --}}
    <h2>Iniciar Sesión</h2>    
    <hr class="w-50" />

    {{!-- para enviar los datos al index.js podria agregar un action="/login" al formulario apuntando a la ruta /login
    la cual seria de tipo GET por defecto, y esa ya la estoy usando para renderizar el formulario, tambien podria agregar
    el method="post" y utilizar otro verbo, pero lo que necesito rescatar es el token asi que lo hare de otra forma, creando
    un script con un codigo para pasar los datos de otra forma. --}}
    <form id="form_login">
        <div class="form-group">
            {{!-- se agrega el name a email para poder capturarlo despues, se hace lo mismo con password. --}}
            <div class="form-group">
                <label>Email</label>
                <input class="form-control w-50 m-auto" name="email" id="email" required/>
            </div>
            <div class="form-group">
                <label>Password</label>
                <input type="password" class="form-control w-50 m-auto" name="password" id="password" required/>
            </div>
        </div>
        <button class="btn btn-success mb-3">Ingresar</button>
        <p>¿Aún no tienes cuenta? <a href="/registro">Regístrate</a></p>
    </form>
    {{!-- {{/if}} --}}
</div>



<script>
    /* Se crea un nueva constante, a la cual se le asignara el formulario. */
    const form = document.getElementById("form_login");

    /* Se agrega un evento preventDefault para prevenir que el formulario se recargue al presionar un boton. */
    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        
        /* Se crea una nueva constante, la cual obtendra toda la informacion de los input dentro del formulario. */
        const formData = new FormData(form);

        /* colocar 3 puntos delante del document representa un operador "spread" y sirve para convertir las posiciones
        del arreglo en numeros para despues recorrer con map y obtener el valor de cada elemento. */
        const [email, password] = [...document.querySelectorAll("form input")].map( (i) => i.value );

        if (email == "" || password == "") {
            Swal.fire(
                'Email o Password no pueden ir vacios',
                'Por favor escriba sus credenciales para iniciar sesión.',
                'error'
            )
        } else {

            try {
                /* Se utiliza el paquete axios para realizar las peticiones al servidor.  */
                /* Utilizando el verbo POST, se apunta al endpoint a utilizar, y ademas como parte del payload se envia
                la data que rescato el formulario. */
                /* Si los datos del usuario son correctos, se crea un nuevo token, el cual se guardara de forma local para utilizarlo
                en otras partes del codigo. */
                const respuesta = await axios.post('/login', formData);
                localStorage.setItem("token", respuesta.data.token);
                sessionStorage.setItem('token', respuesta.data.token);

                /* Utilizando sweetaler2, se crea un mensaje para mostrar en pantalla, y al presionar el boton de aceptar, la pagina
                se redigira hacia datos, ademas la url ira compuesta con el valor del token. */
                Swal.fire(
                    'Inicio de sesión correcto',
                    'Bienvenido',
                    'success'
                ).then(() => {
                    location.href= "/datos?token=" + respuesta.data.token
                });
            } catch (error) {
                Swal.fire(
                    'Error en el email o password ingresados',
                    'Por favor vuelva a intentarlo',
                    'error'
                )
                limpiar();
                console.log(error.code);
                console.log(error.message);
                console.log(error.name);
            }
            
        }
        
        
    })

    function limpiar(){
        document.getElementById("email").value = "";
        document.getElementById("password").value = "";
    }
</script>